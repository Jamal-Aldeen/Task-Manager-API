{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1750722026861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750722098710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,10 +171,6 @@\n 2. Optimize: `php artisan config:cache`, `php artisan route:cache`, `php artisan view:cache`\n 3. Configure web server (Apache/Nginx) with `/public` as document root\n 4. Run migrations: `php artisan migrate --force`\n \n----\n \n-## 📝 License\n-This project is licensed under the [MIT License](https://opensource.org/licenses/MIT).\n-\n ---\n"
                },
                {
                    "date": 1750722111131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,11 +47,9 @@\n - **Theme Support**: Clean, accessible dark/light themes\n \n ---\n \n-## 📸 More Screenshots\n \n-For additional screenshots and detailed documentation, see the [Screenshot Guide](screenshots/README.md) which includes:\n \n - **Authentication flows** (login validation, registration errors)\n - **Task management** (add, edit, delete, toggle status)\n - **Responsive design** (mobile and tablet views)\n"
                }
            ],
            "date": 1750722026861,
            "name": "Commit-0",
            "content": "# Task Manager Application\n\nA modern, full-stack task management application built with **Laravel** and **Livewire**, featuring a responsive web interface and a robust REST API. Developed for the **Junior Full-Stack Laravel Developer assessment** at **ABM Egypt**.\n\n---\n\n## 📸 Application Screenshots\n\n### Authentication Pages\n![Login Page](screenshots/login.png)\n*Login page with secure authentication*\n\n![Register Page](screenshots/register.png)\n*User registration with validation*\n\n### Dashboard Views\n![Main Dashboard](screenshots/dashboard.png)\n*Main dashboard with task management*\n\n![Dashboard View 1](screenshots/dashboard1.png)\n*Dashboard showing task list and operations*\n\n![Dashboard View 2](screenshots/dashboard2.png)\n*Dashboard with various task states*\n\n\n## 🚀 Features\n\n### 🖥️ Web Application\n- **Secure Authentication**: Login and registration with real-time validation\n- **Task Management**: Add, edit, delete, and toggle tasks with live updates\n- **Responsive Design**: Mobile-friendly UI with Tailwind CSS\n- **Real-time Updates**: Powered by Livewire for seamless UX\n- **Session Management**: Secure login/logout functionality\n\n### 📡 REST API\n- **Sanctum Authentication**: Secure token-based access\n- **CRUD Operations**: Create, read, update, and delete tasks\n- **User Authorization**: Users manage only their own tasks\n- **Optimized Schema**: Efficient database structure with relationships\n\n### 🎨 Design & UX\n- **Tailwind CSS**: Modern, utility-first styling\n- **Loading States**: Visual feedback for actions\n- **Error Handling**: Inline validation and error messages\n- **Notifications**: Success messages for task actions\n- **Theme Support**: Clean, accessible dark/light themes\n\n---\n\n## 📸 More Screenshots\n\nFor additional screenshots and detailed documentation, see the [Screenshot Guide](screenshots/README.md) which includes:\n\n- **Authentication flows** (login validation, registration errors)\n- **Task management** (add, edit, delete, toggle status)\n- **Responsive design** (mobile and tablet views)\n- **UI interactions** (loading states, success messages)\n- **Error handling** (validation errors, confirmations)\n\n---\n\n## 🧰 Requirements\n- **PHP** >= 7.3 | 8.0\n- **Laravel** >= 8.x\n- **MySQL** database\n- **Composer** for dependency management\n- **Node.js** (optional, for asset compilation)\n- **Modern Browser** (Chrome, Firefox, Safari, Edge)\n\n---\n\n## ⚙️ Installation\n\n1. **Clone the Repository**\n   ```bash\n   git clone https://github.com/Jamal-Aldeen/Task-Manager-API.git\n   cd Task-Manager-API\n   ```\n\n2. **Install Dependencies**\n   ```bash\n   composer install\n   ```\n\n3. **Configure Environment**\n   ```bash\n   cp .env.example .env\n   ```\n   Update `.env` with your database credentials:\n   ```dotenv\n   DB_CONNECTION=mysql\n   DB_HOST=127.0.0.1\n   DB_PORT=3306\n   DB_DATABASE=task\n   DB_USERNAME=root\n   DB_PASSWORD=your_password\n   APP_URL=http://127.0.0.1:8000\n   SANCTUM_STATEFUL_DOMAINS=127.0.0.1:8000,localhost:8000\n   SESSION_DOMAIN=127.0.0.1\n   ```\n\n4. **Generate App Key**\n   ```bash\n   php artisan key:generate\n   ```\n\n5. **Set Up Database**\n   ```bash\n   mysql -u root -p -e \"CREATE DATABASE IF NOT EXISTS task;\"\n   php artisan migrate\n   ```\n\n6. **Create Test User (Optional)**\n   ```bash\n   php artisan tinker\n   User::create(['name' => 'Test User', 'email' => 'test@example.com', 'password' => bcrypt('password123')]);\n   ```\n\n7. **Serve the Application**\n   ```bash\n   php artisan serve --host=127.0.0.1 --port=8888\n   ```\n   Visit: **http://127.0.0.1:8888**\n\n---\n\n## 🎯 Usage\n\n### 🔐 Authentication\n- **Login**: Navigate to `/login`, use `test@example.com` and `password123`\n- **Register**: Go to `/register` to create a new account\n- **Logout**: Click \"Logout\" in the top navigation\n\n### ✅ Task Management\n- **Add Task**: Enter title and click \"Add Task\"\n- **Edit Task**: Click the pencil icon, edit, and save\n- **Toggle Status**: Click the circle icon to mark as completed/pending\n- **Delete Task**: Click the trash icon and confirm\n\n### 📡 API Endpoints\n| Method | Endpoint           | Description              |\n|--------|--------------------|--------------------------|\n| POST   | `/api/login`       | Authenticate & get token |\n| POST   | `/api/register`    | Register new user        |\n| POST   | `/api/logout`      | Logout user              |\n| GET    | `/api/tasks`       | List user tasks          |\n| POST   | `/api/tasks`       | Create a task            |\n| PUT    | `/api/tasks/{id}`  | Update a task            |\n| DELETE | `/api/tasks/{id}`  | Delete a task            |\n\n---\n\n## 🧪 Testing\n- **Web Testing**: Test authentication, task CRUD, and responsive design\n- **API Testing**: Use `Task Manager API.postman_collection.json` in Postman\n- **Environment**: Set `base_url` to `http://127.0.0.1:8888` in Postman\n\n---\n\n## 🛠️ Technical Stack\n- **Frontend**: Livewire 2.x, Tailwind CSS, Alpine.js, Blade\n- **Backend**: Laravel 8.x, Sanctum, Eloquent ORM\n- **Database**: MySQL\n- **Security**: CSRF protection, bcrypt hashing, input validation\n\n---\n\n## 🚀 Deployment\n1. Set `APP_ENV=production` and `APP_DEBUG=false` in `.env`\n2. Optimize: `php artisan config:cache`, `php artisan route:cache`, `php artisan view:cache`\n3. Configure web server (Apache/Nginx) with `/public` as document root\n4. Run migrations: `php artisan migrate --force`\n\n---\n\n## 📝 License\nThis project is licensed under the [MIT License](https://opensource.org/licenses/MIT).\n\n---\n"
        }
    ]
}